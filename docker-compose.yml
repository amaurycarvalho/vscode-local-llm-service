version: "3.9"

services:
  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    networks:
      - internal
    expose:
      - 11434
    volumes:
      - ollama_data:/root/.ollama
    restart: unless-stopped
    command: serve

  ollama-check:
    image: alpine/curl:latest
    container_name: ollama-check
    networks:
      - internal
    depends_on:
      ollama:
        condition: service_started
    entrypoint: ["/bin/sh", "-c"]
    command: >
      "
      sleep 60 && 
      exit 0
      "
    healthcheck:
      test: ["CMD", "curl", "-fs", "http://ollama:11434/api/tags"]
      interval: 5s
      timeout: 3s
      retries: 10
    restart: "no"

  ollama-init:
    image: ollama/ollama:latest
    container_name: ollama-init
    networks:
      - internal
    environment:
      - OLLAMA_HOST=${OLLAMA_HOST}
      - OLLAMA_DEFAULT_MODEL=${OLLAMA_DEFAULT_MODEL}
      - OLLAMA_LLM_CHAT=${OLLAMA_LLM_CHAT}
      - OLLAMA_LLM_AUTOCOMPLETE=${OLLAMA_LLM_AUTOCOMPLETE}
      - OLLAMA_LLM_EMBED=${OLLAMA_LLM_EMBED}
    entrypoint: ["/bin/sh", "-c"]
    command: >
      "echo 'Downloading Ollama default models...' &&
       ollama pull ${OLLAMA_DEFAULT_MODEL} || true &&
       ollama pull ${OLLAMA_LLM_CHAT} || true &&
       ollama pull ${OLLAMA_LLM_AUTOCOMPLETE} || true &&
       ollama pull ${OLLAMA_LLM_EMBED} || true &&
       echo 'Ollama models downloaded' &&
       exit 0"
    volumes:
      - ollama_data:/root/.ollama
    depends_on:
      ollama-check:
        condition: service_healthy

  cert-generator:
    image: alpine:latest
    container_name: cert-generator
    command: >
      sh -c "
        apk add --no-cache nss-tools curl &&
        curl -L -o /usr/local/bin/mkcert https://github.com/FiloSottile/mkcert/releases/latest/download/mkcert-v1.4.4-linux-amd64 &&
        chmod +x /usr/local/bin/mkcert &&
        mkcert -install &&
        mkcert -cert-file /app/nginx/certs/fullchain.pem -key-file /app/nginx/certs/privkey.pem localhost 127.0.0.1 ::1 &&
        echo 'SSH certs generated'
      "
    volumes:
      - nginx_certs:/app/nginx/certs
    restart: "no"

  reverse-proxy:
    image: nginx:latest
    container_name: nginx
    ports:
      - "3001:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - nginx_certs:/etc/nginx/certs:ro
    depends_on:
      - cert-generator
      - bridge
    networks:
      - internal
      - public
    restart: unless-stopped

  bridge:
    build: ./bridge
    container_name: llm-bridge
    networks:
      - internal
    environment:
      - OLLAMA_HOST=${OLLAMA_HOST}
      - OLLAMA_DEFAULT_MODEL=${OLLAMA_DEFAULT_MODEL}
      - OLLAMA_LLM_CHAT=${OLLAMA_LLM_CHAT}
      - OLLAMA_LLM_AUTOCOMPLETE=${OLLAMA_LLM_AUTOCOMPLETE}
      - OLLAMA_LLM_EMBED=${OLLAMA_LLM_EMBED}
      - LLM_BRIDGE_SERVICE_NAME=${LLM_BRIDGE_SERVICE_NAME}
      - LLM_BRIDGE_API_KEY=${LLM_BRIDGE_API_KEY}
      - LLM_BRIDGE_PORT=${LLM_BRIDGE_PORT}
      - LLM_BRIDGE_LOG_LEVEL=${LLM_BRIDGE_LOG_LEVEL}
    expose:
      - 3001
    depends_on:
      ollama-init:
        condition: service_completed_successfully
    restart: unless-stopped

volumes:
  ollama_data:
  nginx_certs:

networks:
  internal:
    driver: bridge
  public:
    driver: bridge
